version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.3
  docker: circleci/docker@1.5.0
  
commands:
  install_dep:
    steps:
      - run:
          name: install dependencies
          command: |
            make install
  install_ansible:
    description: Install Ansible
    steps:
      - run: 
          name: Install Ansible
          command: |
            sudo apt update
            sudo apt install software-properties-common -y
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install ansible -y
  destroy-environment:
    description: app cloudformation stacks given a workflow ID.
    parameters:
      Workflow_ID:
        type: string 
        default: ${CIRCLE_WORKFLOW_ID:0:7}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name "capstone-<< parameters.Workflow_ID >>"

jobs:
  linkcheck-mkdocs:
    docker:
      - image: python:3.7.15
    steps:
      - checkout
      - install_dep
      - run:
          name: Mkdocs linkcheck
          command: |
            if [[ `mkdocs-linkcheck docs  | grep "Broken" | awk {'print $3'}` -eq 0 ]]
            then
              echo "----------------------------Passed link check--------------------------------"
              exit 0
            else
              echo "----------------------------Failed link check--------------------------------"
              exit 1
            fi
          name: run lint
          command: |
            make lint
            echo "----------------------------Passed lint check--------------------------------"

  build-mkdocs:
    docker:
      - image: python:3.7.15
    steps:
      - checkout
      - install_dep
      - run:
          name: Build mkdocs static page
          command: |
            mkdocs build

  deploy-infra:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
        profile-name: capstone
      - run:
          name: Ensure infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/infra.yml \
              --tags project=capstone \
              --stack-name "capstone-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment

  deploy-mkdocs:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
        profile-name: capstone
      - install_dep
      - run:
          name: Deploy frontend objects
          command: |
            ls
            mkdocs build
            aws s3 cp site s3://capstone-${CIRCLE_WORKFLOW_ID:0:7} --recursive
      - destroy-environment  

  smoke-test:
    docker:
      - image: python:3.7.15
    steps:
      - checkout
      - run:
          name: Frontend smoke test.
          command: |
            FRONTEND_WEBSITE=http://capstone-${CIRCLE_WORKFLOW_ID:0:7}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com
            if curl -s $FRONTEND_WEBSITE | grep "Welcome"
            then
              exit 0
            else
              exit 1
            fi
      - destroy-environment

  cloudfront-update:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
        profile-name: capstone
      - run:
          name: Save Old Workflow ID to kvdb.io
          command: |
            export OLD_WORKFLOW_ID=$(aws cloudformation \
                      list-exports --query "Exports[?Name==\`WorkflowID\`].Value" \
                      --no-paginate --output text)
            echo "Old Wokflow ID: $OLD_WORKFLOW_ID"
            curl https://kvdb.io/${KVDB_BUCKET}/old_workflow_id -d "${OLD_WORKFLOW_ID}"
      - run:
          name: Update cloudfront distribution
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/cloudfront.yml \
              --parameter-overrides WorkflowID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --stack-name InitialStack      
      - destroy-environment

  clean-up:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
        profile-name: capstone
      - install_dep
      - run:
          name: Remove old stacks and files
          command: |
            export STACKS=($(aws cloudformation list-stacks \
                --query "StackSummaries[*].StackName" \
                --stack-status-filter CREATE_COMPLETE --no-paginate --output text)) 
            echo Stack names: "${STACKS[@]}"
            export OldWorkflowID=$(curl --insecure https://kvdb.io/${KVDB_BUCKET}/old_workflow_id)
            echo Old Workflow ID: $OldWorkflowID 
            if [[ "${STACKS[@]}" =~ "${OldWorkflowID}" ]]
            then
              echo "----------------------------Delete Confirmed--------------------------------"
              aws s3 rm "s3://capstone-${OldWorkflowID}" --recursive
              aws cloudformation delete-stack --stack-name "capstone-${OldWorkflowID}"
            else
              echo "----------------------------Cannot Cleanup----------------------------------"
            fi
      - destroy-environment

workflows:
  default:
    jobs:
      - linkcheck-mkdocs
      - build-mkdocs:
          requires: [linkcheck-mkdocs]
      - deploy-infra:
          requires: [build-mkdocs]
          filters:
            branches:
              only: [main]
      - deploy-mkdocs:
          requires: [deploy-infra]
      - smoke-test:
          requires: [deploy-mkdocs]
      - cloudfront-update:
          requires: [smoke-test]
      - clean-up:
          requires: [cloudfront-update]