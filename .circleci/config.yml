version: 2.1

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
  install_ansible:
      description: Install Ansible
      steps:
        - run: 
            name: Install Ansible
            command: |
              sudo apt update
              sudo apt install software-properties-common -y
              sudo add-apt-repository --yes --update ppa:ansible/ansible
              sudo apt install ansible -y
  destroy-environment:
      description: app cloudformation stacks given a workflow ID.
      parameters:
        Workflow_ID:
          type: string 
          default: ${CIRCLE_WORKFLOW_ID:0:7}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name "mkdocs-<< parameters.Workflow_ID >>"
    revert-migrations:
      description: Revert the last migration
      parameters:
        Workflow_ID:
          type: string
          default: ${CIRCLE_WORKFLOW_ID:0:7}
      steps:
      - run:
          name: Revert migrations
          when: on_fail 
          command: |
            SUCCESS=$(curl --insecure  https://kvdb.io/${KVDB_BUCKET}/migration_<< parameters.Workflow_ID >>)
            # Logic for reverting the database state 
            if (( $SUCCESS == 1 )); 
            then
              #cd ~/project/backend
              #npm install
              #npm run migration:revert 
            fi
jobs:
  build-mkdocs:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
        name: Build 

workflows:
  default:
    jobs:
      - build-mkdocs
      - test-mkdocs:
          requires: [build-mkdocs]
      - scan-mkdocs:
          requires: [test-mkdocs]
      - deploy-infra:
          requires: [test-mkdocs, scan-mkdocs]
          filters:
            branches:
              only: [main]
      - run-migrations:
          requires: [deploy-infra]
      - deploy-mkdocs:
          requires: [run-migrations]
      - smoke-test:
          requires: [deploy-mkdocs]
      - cloudfront-update:
          requires: [smoke-test]
      - clean-up:
          requires: [cloudfront-update]


